apiVersion: v1
kind: ServiceAccount
metadata:
  name: tasky-admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tasky-admin-binding
subjects:
- kind: ServiceAccount
  name: tasky-admin
  namespace: default
roleRef:
  kind: ClusterRole 
  name: cluster-admin # full cluster-admin role privileges
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasky
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasky
  template:
    metadata:
      labels:
        app: tasky
    spec:
      serviceAccountName: tasky-admin  # Use the admin service account
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: tasky
        image: ghcr.io/limalbert96/tasky:latest #  risky as it's mutable. Should use specific version tags.
        env:
        - name: MONGODB_URI
          value: "mongodb://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST):27017/$(MONGODB_DATABASE)?authSource=$(MONGODB_DATABASE)"
        envFrom:
        - configMapRef:
            name: mongo-config
        - secretRef:
            name: mongo-creds
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        securityContext:
          privileged: true  # Intentionally insecure
          runAsUser: 0     # Run as root
---
apiVersion: v1
kind: Service
metadata:
  name: tasky
spec:
  type: LoadBalancer  # Expose to public internet
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: tasky
